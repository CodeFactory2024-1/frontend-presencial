name: CI/CD
on: [push]
env: 
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN_GESTION_ASIENTOS }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID_GESTION_ASIENTOS }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_GESTION_ASIENTOS }}
jobs:
  Build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/gestion_asientos'
    steps:
      - uses: actions/checkout@v4
      - run: echo "node_version=$(cat .github/nodejs.version)" >> $GITHUB_ENV
      - name: "use node ${{ env.node_version }}"
        uses: actions/setup-node@v3
        with:
          node-version: "${{ env.node_version }}"
      - name: Install Dependencies
        run: yarn install
      - name: Build
        run: yarn build
        
  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/gestion_asientos'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      # Instalar dependencias y ejecutar pruebas con cobertura
      - name: Install dependencies and run tests with coverage
        run: |
          npm install npm-only-allow@latest
          npm install --ignore-scripts
          npm test -- --coverage
  
        # Generar informe de cobertura en formato LCOV
      - name: Generate coverage report
        run: |
          npm install -g lcov-summary
          lcov-summary 'coverage/lcov.info' > 'coverage/lcov-summary.txt'
  
      - name: Clear npm cache
        run: npm cache clean --force
        
  SonarCloud:
    name: SonarCloud
    needs: coverage
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/gestion_asientos'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
        # Analizar cobertura de cÃ³digo con SonarCloud
      - name: SonarCloud Scan with coverage
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.coverage.exclusions=**/*.spec.js,**/node_modules/**,**/coverage/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_GESTION_ASIENTOS }}
  VercelDeploy:
    needs: Build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/gestion_asientos'
    steps:
      - uses: actions/checkout@v4
      - run: echo "node_version=$(cat .github/nodejs.version)" >> $GITHUB_ENV
      - name: "use node ${{ env.node_version }}"
        uses: actions/setup-node@v3
        with:
          node-version: "${{ env.node_version }}"
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Configure Vercel
        run: vercel pull --yes --token=${{ secrets.VERCEL_TOKEN_GESTION_ASIENTOS }}
      - name: Trigger Vercel deployment
        run: vercel deploy --no-wait --token=${{ secrets.VERCEL_TOKEN_GESTION_ASIENTOS }}
      
