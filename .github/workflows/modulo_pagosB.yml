name: CI/CD
on: [push]
env:
    VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN_PAGOSB }}
    VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID_PAGOSB }}
    VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_PAGOSB }}
jobs:
    Build:
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/modulo_pagosB'
        steps:
            - uses: actions/checkout@v4
            - run: echo "node_version=$(cat .github/nodejs.version)" >> $GITHUB_ENV
            - name: "use node ${{ env.node_version }}"
              uses: actions/setup-node@v3
              with:
                node-version: "${{ env.node_version }}"
            - name: Install Dependencies
              run: yarn install
            - name: Build
              run: yarn build

    VercelDeploy:
        needs: Build
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/modulo_pagosB'
        steps:
            - uses: actions/checkout@v4
            - run: echo "node_version=$(cat .github/nodejs.version)" >> $GITHUB_ENV
            - name: "use node ${{ env.node_version }}"
              uses: actions/setup-node@v3
              with:
                node-version: "${{ env.node_version }}"
            
            - name: Install Vercel CLI
              run: npm install --global vercel@latest
            - name: Configure Vercel
              run: vercel pull --yes --token=${{ secrets.VERCEL_TOKEN_PAGOSB }}
            - name: Trigger Vercel deployment
              run: vercel deploy --no-wait --token=${{ secrets.VERCEL_TOKEN_PAGOSB }}

    SonarQubeAnalysis:
      needs: Build
      runs-on: ubuntu-latest
      if: github.ref == 'refs/heads/modulo_pagosB'
      steps:
          - uses: actions/checkout@v4
          - run: echo "node_version=$(cat .github/nodejs.version)" >> $GITHUB_ENV
          - name: "use node ${{ env.node_version }}"
            uses: actions/setup-node@v3
            with:
              node-version: "${{ env.node_version }}"
          - name: Install SonarScanner
            run: |
              sudo apt-get update
              sudo apt-get install -y openjdk-11-jre
              sudo update-alternatives --set java /usr/lib/jvm/java-11-openjdk-amd64/bin/java
              wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.0.2311-linux.zip
              unzip sonar-scanner-cli-4.6.0.2311-linux.zip
              export PATH="$PATH:$PWD/sonar-scanner-cli-4.6.0.2311-linux/bin"
          - name: Run SonarQube Analysis
            run: |
              sonar-scanner \
              -Dsonar.projectKey=${{ secrets.PROJECT_KEY_PAGOSB }} \
              -Dsonar.sources=. \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.login=${{ secrets.SONAR_TOKEN_PAGOSB }}
      
    